

    case lists:keyfind(Node,1,Map) of
        true ->
            lists:keydelete(Node,1,Map),
            [{Node,Links}|Map];
        false ->
            [{Node,Links}]
    end.


    all_nodes(Map)->
    matrix = lists:map(fun({K,V}) -> [K|V] end, Map).


    [Sorted] = lists:map(fun(N) -> update(N, 1, X, T) end, R),



    all_nodes([]) -> [];
all_nodes([{K,V}|T])->
    L = [K|all_nodes(T)],
    lst_mem(L,V).


lst_mem(L,[]) -> L;
lst_mem(L,[H|T]) ->
    case  lists:member(H,L) of
        true -> lst_mem(L,T);
        false -> lst_mem([H|L],T)
    end.







*******

alla_nod(Map)->
    Lst = all_nodes(Map),
    lists:foldl(fun(V,Lst) -> lst_mem(L,V) end,V, Map=[{K,V}|T]).


all_nodes([]) -> [];
all_nodes([{K,V}|T])->
    L = [K|all_nodes(T)].
    %lists:foldl(fun(V,L)-> lst_mem(L,V) end, V, L).
    %lst_mem(L,V).


lst_mem(L,[]) -> L;
lst_mem(L,[H|T]) ->
    case  lists:member(H,L) of
        true -> lst_mem(L,T);
        false -> lst_mem([H|L],T)
    end.

    ********